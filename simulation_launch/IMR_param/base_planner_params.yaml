#For full documentation of the parameters in this file, and a list of all the
#parameters available for TrajectoryPlannerROS, please see
#http://www.ros.org/wiki/base_local_planner
base_global_planner: "navfn/NavfnROS"
base_local_planner: "base_local_planner/TrajectoryPlannerROS"

recovery_behavior_enabled: false
recovery_behaviors:
  - {name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}

NavfnROS:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  default_tolerance: 0.2 # A tolerance on the goal point for the planner.
  visualize_potential: true

TrajectoryPlannerROS:
  #Set the acceleration limits of the robot
  acc_lim_theta: 20.0
  acc_lim_x: 20.0
  acc_lim_y: 0

#   # #Set the velocity limits of the robot
  max_vel_x: 20.0
  min_vel_x: 0.0
  max_rotational_vel: 20.0
  min_rotational_vel: -20.0
#   # # min_in_place_rotational_vel: -3
  max_in_place_rotational_vel: 5

  controller_frequency: 20

#   # #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.10
  
#   # #For this example, we'll use a holonomic robot
  holonomic_robot: false

#   # #Since we're using a holonomic robot, we'll set the set of y velocities it will sample
  

#   # #Set the tolerance on achieving a goal
  xy_goal_tolerance: 0.2
  yaw_goal_tolerance: 0.2
  latch_xy_goal_tolerance: true

#   # #We'll configure how long and with what granularity we'll forward simulate trajectories
  sim_time: 4.0
  sim_granularity: 0.05
  angular_sim_granularity: 0.05

  vx_samples: 10
  vtheta_samples: 20

#   # #Parameters for scoring trajectories
  occdist_scale: 0.02
  pdist_scale: 32
  gdist_scale: 1.0
  #   heading_lookahead: 0.7
  #   heading_lookahead: 2
  # heading_scoring: true
  # heading_scoring_timestep: 1
#    escape_reset_dist: 0.05
#    escape_reset_theta: 0.1
#   simple_attractor: true

# Dynamic Window Approach is more efficient than Trajectory Rollout.
  dwa: false

# How far the robot must travel before oscillation flags are reset
  oscillation_reset_dist: 0.05

# Eat up the plan as the robot moves along it
  prune_plan: true
  meter_scoring: true

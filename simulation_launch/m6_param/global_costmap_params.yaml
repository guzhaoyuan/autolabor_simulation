global_costmap:
  update_frequency: 5.0
  publish_frequency: 5.0
  static_map: false
  rolling_window: true
  width: 10.0
  height: 10.0
  resolution: 0.03
  origin_x: 0.0
  origin_y: 0.0

  observation_sources: scan0

  scan0/data_type: LaserScan
  scan0/sensor_frame: ""
  scan0/topic: scan
  scan0/marking: true
  scan0/clearing: true
  scan0/expected_update_rate: 0.0
  scan0/observation_persistence: 0.0
  scan0/max_obstacle_height: 2
  scan0/min_obstacle_height: 0.08
  scan0/obstacle_range: 2.0
  scan0/inf_is_valid: true

plugins:
  - {name: inflation_layer,         type: "costmap_2d::InflationLayer"}
  - {name: obstacle_layer,          type: "costmap_2d::ObstacleLayer"}

#############################
#
#        inflation_layer
#
#############################
inflation_layer:
# The radius in meters to which the map inflates obstacle cost values. (double, default: 0.55)
  inflation_radius: 0.5

# A scaling factor to apply to cost values during inflation. The cost function is computed as follows for all cells in the costmap further than the inscribed radius distance and closer than the inflation radius distance away from an actual obstacle: exp(-1.0 * cost_scaling_factor * (distance_from_obstacle - inscribed_radius)) * (costmap_2d::INSCRIBED_INFLATED_OBSTACLE - 1), where costmap_2d::INSCRIBED_INFLATED_OBSTACLE is currently 254. NOTE: since the cost_scaling_factor is multiplied by a negative in the formula, increasing the factor will decrease the resulting cost values. (double, default: 10.0)
  cost_scaling_factor: 10.0

#############################
#
#      obstacle_layer
#
#############################
obstacle_layer:
# The maximum height of any obstacle to be inserted into the costmap in meters. This parameter should be set to be slightly higher than the height of your robot. (double, default: 2.0)
  max_obstacle_height: 2.0
# The default maximum distance from the robot at which an obstacle will be inserted into the cost map in meters. This can be over-ridden on a per-sensor basis. (double, default: 2.5)
  obstacle_range: 3.0
# The default range in meters at which to raytrace out obstacles from the map using sensor data. This can be over-ridden on a per-sensor basis. (double, default: 3.0)
  raytrace_range: 4.0
# If false, each pixel has one of 2 states: lethal obstacle or free. If true, each pixel has one of 3 states: lethal obstacle, free, or unknown.  (bool, default: false)
  track_unknown_space: false
# If true, the robot footprint will clear (mark as free) the space in which it travels. (bool, default: true)
  footprint_clearing_enabled: true
